{"version":3,"file":"static/js/362.30ce9921.chunk.js","mappings":"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","sources":["webpack://react-hw-08-phonebook/./src/components/FormPhonebook/FormPhonebook.module.css?d55d","components/FormPhonebook/FormPhonebook.jsx","webpack://react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-hw-08-phonebook/./src/components/shared/ButtonStyled/button-styled.module.css?0b5c","components/shared/ButtonStyled/ButtonStyled.jsx","webpack://react-hw-08-phonebook/./src/components/ContactList/ContactItem/ContactItem.module.css?7ce2","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","utils/notification.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormPhonebook_form__rYCjm\",\"label\":\"FormPhonebook_label__EHBVu\",\"input\":\"FormPhonebook_input__7QpSj\",\"btn\":\"FormPhonebook_btn__u5Ui2\",\"error\":\"FormPhonebook_error__-GhRH\"};","import React, { useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\nimport {\r\n  useAddContactMutation,\r\n  useFetchContactsQuery,\r\n} from \"redux/contactsSlice\";\r\n\r\nimport { notifyAddContact, serverError } from \"utils/notification\";\r\nimport css from \"./FormPhonebook.module.css\";\r\n\r\nconst FormPhonebook = () => {\r\n  const [addContact, { isLoading, isSuccess, isError }] =\r\n    useAddContactMutation();\r\n  const { data: contacts } = useFetchContactsQuery();\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      notifyAddContact();\r\n    }\r\n  }, [isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      serverError();\r\n    }\r\n  }, [isError]);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    const name = values.name;\r\n    const number = values.phone;\r\n    contacts.find(\r\n      (contact) => contact.name.toLowerCase() === values.name.toLowerCase()\r\n    )\r\n      ? alert(`${values.name} is already in contacts!`)\r\n      : addContact({ name, number }) && resetForm();\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(20, \"Too Long!\")\r\n      .required(\"Name is required field\"),\r\n\r\n    phone: Yup.number()\r\n      .typeError(\"That does not look like a phone number\")\r\n      .positive(\"A phone number can't start with a minus\")\r\n      .integer(\"A phone number can't include a decimal point\")\r\n      .required(\"A phone number is required\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={1000} position=\"top-center\" />\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form className={css.form}>\r\n          <label className={css.label}>\r\n            Name\r\n            <Field\r\n              className={css.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n            />\r\n            <ErrorMessage className={css.error} name=\"name\" component=\"div\" />\r\n          </label>\r\n          <label className={css.label}>\r\n            Number\r\n            <Field\r\n              className={css.input}\r\n              type=\"tel\"\r\n              name=\"phone\"\r\n              placeholder=\"phone\"\r\n            />\r\n            <ErrorMessage className={css.error} name=\"phone\" component=\"div\" />\r\n          </label>\r\n          <button className={css.btn} disabled={isLoading} type=\"submit\">\r\n            {isLoading && <RotatingLines height=\"20\" width=\"20\" />}\r\n            Add contact\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormPhonebook;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__aZtzq\",\"input\":\"Filter_input__5OfYv\"};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\n\r\nimport { setFilter } from \"redux/filterSlice\";\r\nimport { getFilter } from \"redux/selectors\";\r\nimport css from \"./Filter.module.css\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n  const valueFilter = (payload) => {\r\n    dispatch(setFilter(payload));\r\n  };\r\n\r\n  const changeFilter = (e) => {\r\n    valueFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <label className={css.label}>\r\n      Find contacts by name\r\n      <DebounceInput\r\n        minLength={1}\r\n        debounceTimeout={300}\r\n        className={css.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        placeholder=\"Search\"\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__I6sK1\",\"default\":\"ContactList_default__4Mqqe\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button-styled_btn__QjdoT\"};","import css from \"./button-styled.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\n\r\nconst ButtonStyled = ({ children, disabled, isLoading, ...rest }) => {\r\n  return (\r\n    <button className={css.btn} disabled={disabled} {...rest} type=\"submit\">\r\n      {isLoading && <RotatingLines height=\"20\" width=\"20\" />}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButtonStyled.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  disabled: PropTypes.bool,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default ButtonStyled;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__jC3mN\",\"delBtn\":\"ContactItem_delBtn__SiV8I\",\"btn\":\"ContactItem_btn__t7kD-\"};","import { PropTypes } from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport ButtonStyled from \"components/shared/ButtonStyled/ButtonStyled\";\r\nimport {\r\n  useDeleteContactMutation,\r\n  useUpdateContactMutation,\r\n} from \"redux/contactsSlice\";\r\nimport css from \"./ContactItem.module.css\";\r\n\r\nconst ContactItem = ({ id, name, number }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedName, setEditedName] = useState(name);\r\n  const [editedNumber, setEditedNumber] = useState(number);\r\n\r\n  const [deleteContact, { isLoading: isDeleting, isSuccess: isDeleted }] =\r\n    useDeleteContactMutation();\r\n  const [updateContact, { isLoading: isUpdating, isSuccess: isUpdated }] =\r\n    useUpdateContactMutation();\r\n\r\n  useEffect(() => {\r\n    if (isDeleted) {\r\n      toast.success(\"Contact has been deleted!\");\r\n    }\r\n    if (isUpdated) {\r\n      setIsEditing(false);\r\n      toast.success(\"Contact has been updated!\");\r\n    }\r\n  }, [isDeleted, isUpdated]);\r\n\r\n  const handleEditClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setIsEditing(false);\r\n    setEditedName(name);\r\n    setEditedNumber(number);\r\n  };\r\n\r\n  const handleSaveClick = () => {\r\n    updateContact({ id, name: editedName, number: editedNumber });\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\r\n      deleteContact(id);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"name\") {\r\n      setEditedName(e.target.value);\r\n    } else if (e.target.name === \"number\") {\r\n      setEditedNumber(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className={css.contactItem}>\r\n      {isEditing ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={editedName}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={editedNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <div>\r\n            <ButtonStyled onClick={handleSaveClick} disabled={isUpdating}>\r\n              {isUpdating && <RotatingLines height=\"20\" width=\"20\" />}\r\n              Save\r\n            </ButtonStyled>\r\n            <ButtonStyled onClick={handleCancelClick}>Cancel</ButtonStyled>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span>{name}:</span> <span>{number}</span>\r\n          <div>\r\n            <ButtonStyled onClick={handleEditClick}>Edit</ButtonStyled>\r\n            <ButtonStyled onClick={handleDeleteClick} disabled={isDeleting}>\r\n              {isDeleting && <RotatingLines height=\"20\" width=\"20\" />}\r\n              Delete\r\n            </ButtonStyled>\r\n          </div>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport css from \"./ContactList.module.css\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport { getFilteredContacts } from \"redux/selectors\";\r\n\r\nimport { useFetchContactsQuery } from \"redux/contactsSlice\";\r\nimport { getFilter } from \"redux/selectors\";\r\n\r\nconst ContactList = () => {\r\n  const filter = useSelector(getFilter);\r\n\r\n  const { data: contacts, isLoading, error } = useFetchContactsQuery();\r\n  return (\r\n    <>\r\n      {isLoading && <p className={css.default}>...loading</p>}\r\n      {error && (\r\n        <p className={css.default}>\r\n          Sorry, something went wrong, please try again later!\r\n        </p>\r\n      )}\r\n      {contacts && contacts.length === 0 && <p>There is no contact!</p>}\r\n      <ul className={css.contactList}>\r\n        {contacts &&\r\n          getFilteredContacts(contacts, filter).map(({ id, name, number }) => (\r\n            <ContactItem key={id} name={name} number={number} id={id} />\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsPage_wrapper__OkD74\",\"titlePhone\":\"ContactsPage_titlePhone__cfZFs\",\"titleCont\":\"ContactsPage_titleCont__8JqEF\"};","import { useSelector } from \"react-redux\";\r\n\r\nimport FormPhonebook from \"components/FormPhonebook/\";\r\nimport Filter from \"components/Filter\";\r\nimport ContactList from \"components/ContactList\";\r\nimport { getIsLoggedIn } from \"redux/selectors\";\r\n\r\nimport css from \"./ContactsPage.module.css\";\r\n\r\nconst ContactsPage = () => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    isLoggedIn && (\r\n      <div className={css.wrapper}>\r\n        <h1 className={css.titlePhone}>Phonebook</h1>\r\n        <FormPhonebook />\r\n        <h2 className={css.titleCont}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default ContactsPage;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const loginError = () => toast.error(\"Sorry, wrong email or password!\");\r\n\r\nexport const registerError = () =>\r\n  toast.error(\"Sorry, incorrect data entered!\");\r\n\r\nexport const serverError = () =>\r\n  toast.error(\"Sorry, something went wrong, please try again later!\");\r\n\r\nexport const notifyAddContact = () => toast.success(\"Contact added!\");\r\n\r\nexport const notifyDeliteContact = () => toast.info(\"Contact deleted!\");\r\n\r\nexport const notifyUpdateContact = () =>\r\n  toast.success(\"The contact has been successfully updated!\");\r\n"],"names":["_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","_slicedToArray","addContact","_useAddContactMutatio3","isLoading","isSuccess","isError","contacts","useFetchContactsQuery","data","useEffect","notifyAddContact","serverError","validationSchema","Yup","shape","name","min","max","required","phone","typeError","positive","integer","_jsxs","_Fragment","children","_jsx","ToastContainer","autoClose","position","Formik","initialValues","onSubmit","values","_ref","resetForm","number","find","contact","toLowerCase","alert","concat","Form","className","css","Field","type","placeholder","ErrorMessage","component","disabled","RotatingLines","height","width","dispatch","useDispatch","filter","useSelector","getFilter","DebounceInput","minLength","debounceTimeout","value","onChange","e","payload","target","setFilter","rest","_objectWithoutProperties","_excluded","_objectSpread","id","_useState","useState","_useState2","isEditing","setIsEditing","_useState3","_useState4","editedName","setEditedName","_useState5","_useState6","editedNumber","setEditedNumber","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","_useDeleteContactMuta3","isDeleting","isDeleted","_useUpdateContactMuta","useUpdateContactMutation","_useUpdateContactMuta2","updateContact","_useUpdateContactMuta3","isUpdating","isUpdated","toast","success","handleChange","ButtonStyled","onClick","window","confirm","_useFetchContactsQuer","error","length","getFilteredContacts","map","ContactItem","getIsLoggedIn","FormPhonebook","Filter","ContactList","loginError","registerError"],"sourceRoot":""}